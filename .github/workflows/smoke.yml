name: smoke
on:
  pull_request:
    branches:
      - main
permissions:
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  # pull-requests: read-
jobs:
  smoke:
    name: smoke
    if: |
      true
    runs-on: ubuntu-latest
    env:
      VANUS_GATEWAY: 192.168.49.2:30001
      BUILDPLATFORM: linux/amd64
      
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Environmental preparation
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          minikube start
          curl -LO https://dl.k8s.io/release/v1.24.0/bin/linux/amd64/kubectl
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      - name: Deploy Vanus
        run: |
          export IMAGE_TAG=$(git log -1 --format='%h' | awk '{print $0}')
          export VERSION=$(cat ./deploy/all-in-one.yaml| grep -w "image" | awk -F ":" '{print $NF}' | awk 'FNR == 1')
          export BUILDPLATFORM=$(uname -m)
          sed -i "s/${VERSION}/${IMAGE_TAG}/g" ./deploy/all-in-one.yaml
          eval $(minikube docker-env)
          make docker-build
          kubectl apply -f ./deploy/all-in-one.yaml
          kubectl apply -f ./test/yaml/display.yml
          kubectl apply -f ./test/yaml/etcd-srv.yml
          make build-cmd
          chmod ug+x ./bin/vsctl
          sudo mv ./bin/vsctl /usr/local/bin/vsctl
          sleep 60s && for i in $(seq 1 20); do kubectl get pod -n vanus --no-headers | grep -v Run || break;sleep 5s;done
          echo "Post Deploy Vanus"
          kubectl get pod -n vanus
          minikube service list
          vsctl cluster controller topology

      - name: Exec smoke
        run: |
          make build-smoke
          ./bin/smoke

      - name: Check smoke
        run: |
          vsctl event get eventbus-base --offset 0 --number 5
          vsctl event get eventbus-filter --offset 0 --number 5
          vsctl eventbus create --name "quick-start"
          vsctl event put quick-start --data-format plain --body "Hello Vanus" --id "1" --source "quick-start"
          echo sleep1s
          sleep 1s
          vsctl event get quick-start --offset 0 --number 1
          echo sleep1s
          sleep 1s
          vsctl event get quick-start --offset 0 --number 1
          kubectl get pod -n vanus | grep quick-display | awk '{print $1}' | xargs kubectl logs -n vanus | grep -n "total" | wc -l
          echo sleep5s
          sleep 5s
          kubectl get pod -n vanus | grep quick-display | awk '{print $1}' | xargs kubectl logs -n vanus | grep -n "total" | wc -l
          echo sleep5s
          sleep 5s
          kubectl get pod -n vanus | grep quick-display | awk '{print $1}' | xargs kubectl logs -n vanus | grep -n "total" | wc -l
          [[ $(kubectl get pod -n vanus | grep quick-display | awk '{print $1}' | xargs kubectl logs -n vanus | grep -n "total" | wc -l) -eq 4 ]] && echo "success" || echo "failed"

